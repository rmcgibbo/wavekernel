#
#@BEGIN LICENSE
#
# wavekernel2 by Psi4 Developer, a plugin to:
#
# PSI4: an ab initio quantum chemistry software package
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#@END LICENSE
#

#
# Plugin Makefile generated by Psi4.
#
# You shouldn't need to modify anything in this file.
#

# The name of your plugin. Taken from the directory name.
NAME := $(shell basename `pwd`)

# C++ source files for your plugin. By default we grab all *.cc files.
CXXSRC := $(wildcard *.cc) $(wildcard */*.cc)

# Flags that were used to compile Psi4.
CXX = c++
CXXDEFS = -DFC_SYMBOL=2 -DHAVE_SYSTEM_NATIVE_LAPACK -DHAVE_SYSTEM_NATIVE_BLAS -DHAS_CXX11_VARIADIC_TEMPLATES -DHAS_CXX11_STATIC_ASSERT -DHAS_CXX11_SIZEOF_MEMBER -DHAS_CXX11_RVALUE_REFERENCES -DHAS_CXX11_LIB_REGEX -DHAS_CXX11_NULLPTR -DHAS_CXX11_LONG_LONG -DHAS_CXX11_LAMBDA -DHAS_CXX11_INITIALIZER_LIST -DHAS_CXX11_DECLTYPE -DHAS_CXX11_CSTDINT_H -DHAS_CXX11_CONSTEXPR -DHAS_CXX11_AUTO_RET_TYPE -DHAS_CXX11_AUTO -DHAS_CXX11_FUNC -DHAS_CXX11 -DVAR_MFDS -DSYS_DARWIN
CXXFLAGS = -g -O0 -DRESTRICT=__restrict__ -fPIC -std=c++11
LDFLAGS = -Wl,-search_paths_first -Wl,-headerpad_max_install_names
INCLUDES = -I$(PSI_OBJDIR)/src/lib -I$(PSI_SRCDIR)/src/lib -I$(PSI_SRCDIR)/include -I$(PSI_OBJDIR)/include -I$(PSI_OBJDIR)/boost/include -I$(PSI_PYTHON_INCLUDE) -I/usr/include
OBJDIR = $(PSI_OBJDIR)

# Used to determine linking flags.
UNAME = $(shell uname)

# Need to link against Psi4 plugin library
PSIPLUGIN = -L$(OBJDIR)/lib -lplugin -lboost_random

DEPENDINCLUDE = $(notdir $(wildcard *.h*))

PSITARGET = $(NAME).so

# Start the compilation rules
default:: $(PSITARGET)

# Add the flags needed for shared library creation
ifeq ($(UNAME), Linux)
    LDFLAGS += -shared
endif
ifeq ($(UNAME), Darwin)
    LDFLAGS += -shared -undefined dynamic_lookup
    CXXFLAGS += -fno-common
endif

# The object files
BINOBJ := $(notdir $(CXXSRC:%.cc=%.o))

gitversion.hpp: .git/HEAD .git/index
	echo "const char *GIT_VERSION = \"$(shell git rev-parse --short HEAD)\";" > gitversion.hpp
mosignature.o: mosignature.cc
	$(CXX) $(CXXDEFS) $(CXXFLAGS) $(INCLUDES) -c $<
wavekernel.o: wavekernel.cc gitversion.hpp
	$(CXX) $(CXXDEFS) $(CXXFLAGS) $(INCLUDES) -c $<
matrixutils.o: matrixutils.cc
	$(CXX) $(CXXDEFS) $(CXXFLAGS) $(INCLUDES) -c $<
fermilevel.o: fermilevel.cc
	$(CXX) $(CXXDEFS) $(CXXFLAGS) $(INCLUDES) -c $<
cnpy.o: cnpy/cnpy.cc
	$(CXX) $(CXXDEFS) $(CXXFLAGS) $(INCLUDES) -c $<
brent.o: brent/brent.cc
	$(CXX) $(CXXDEFS) $(CXXFLAGS) $(INCLUDES) -c $<

$(PSITARGET): $(BINOBJ)
	$(CXX) $(LDFLAGS) -o $@ $^ $(CXXDEFS) $(PSIPLUGIN)

clean:
	rm -f $(BINOBJ) $(PSITARGET) *.d *.pyc *.test output.dat psi.timer.dat

print-%:
	@echo '$*=$($*)'
